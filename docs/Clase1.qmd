---
title: "Clase 1: Ingreso de datos"
author: "David Murillo"
format: html
---

# Introducción

En esta clase, nos enfocaremos en el proceso de ingreso de datos a la interfaz de RStudio. El manejo eficiente de datos es fundamental en cualquier análisis o proyecto en R, y para ello, es esencial comprender cómo cargar diferentes estructuras de datos.

A lo largo de la sesión, exploraremos el ingreso de datos desde diversas fuentes, incluyendo archivos de texto (.txt), archivos CSV (.csv), así como la importación de datos desde hojas de cálculo de Excel. Este conocimiento resulta crucial para poder trabajar con conjuntos de datos provenientes de distintas fuentes y formatos.

# Cargar base de datos

Uno de los primeros pasos en cualquier análisis de datos es cargar la información que se va a estudiar. Abordaremos el proceso de carga de bases de datos en RStudio, y te proporcionaremos las herramientas necesarias para realizar esta tarea de manera efectiva. ¡Comencemos!


- Importar base de datos .txt delimitados por espacio

```{r}
Momoto <- read.delim("C:/Users/david/OneDrive - University of Massachusetts/HN Biology Investigation/Cursos/CapacitacionHidrobiologia/data/kebmot.txt")
```

- Importar base de datos .txt delimitados por espacio

```{r}
water <- read.csv("C:/Users/david/OneDrive - University of Massachusetts/HN Biology Investigation/Cursos/CapacitacionHidrobiologia/data/water_potability.csv")
```


Cargar paquete

```{r}
library(tidyverse)
```


## Filtrar Datos

Comencemos limpiando el conjunto de datos y filtrando las observaciones que no están aprobadas.

Crear un nuevo conjunto de datos llamado "MomotoClean" que contiene solo las observaciones aprobadas.

```{r}

MomotoClean <- Momoto %>% 
  filter(APPROVED == 1)
```

:::{.note}

**Explicación:**

Momoto es el nombre del conjunto de datos original.

`%>%` es el operador pipe que se utiliza para encadenar funciones en R. Esto significa que el resultado de la operación anterior se pasa como entrada a la siguiente operación.

`filter(APPROVED == 1)` se utiliza para seleccionar solo las filas donde la columna "APPROVED" es igual a 1. En otras palabras, esto filtra las observaciones que han sido aprobadas (ya que se asume que "APPROVED" toma el valor de 1 para las observaciones aprobadas y posiblemente otro valor para las no aprobadas).

El resultado de la operación de filtrado se asigna a un nuevo conjunto de datos llamado "MomotoClean".

En resumen, el código filtra el conjunto de datos original para retener solo las observaciones que han sido aprobadas, creando así un nuevo conjunto de datos llamado "MomotoClean" que contiene únicamente las observaciones aprobadas.

:::

## Seleccion de Columnas

Ahora, seleccionemos columnas específicas de interés del conjunto de datos limpio.

```{r}
MomotoSelected <- MomotoClean %>% 
  select(GLOBAL.UNIQUE.IDENTIFIER, COMMON.NAME, SCIENTIFIC.NAME, COUNTRY, STATE, LATITUDE, LONGITUDE, OBSERVATION.DATE)
```


## Agrupar y Resumir

Podemos agrupar los datos por país y resumir el número de observaciones en cada país.

```{r}
MomotoSummary <- MomotoSelected %>% 
  group_by(COUNTRY) %>% 
  summarise(Observations = n())
```

