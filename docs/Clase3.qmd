---
title: "Clase 3: Manejo de datos avanzado"
author: "David Murillo"
format: html
---

Para esta clase, emplearemos una base de datos que contiene observaciones de conteo puntual realizadas en Yoro, Honduras, durante el año 2016. La base de datos se encuentra en estado "crudo", y nuestro objetivo será organizarla para obtener una base de datos que sea analizable con las técnicas estadísticas más modernas.

::: panel-tabset

# Ingreso de datos

```{r, warning=FALSE, message=FALSE}

library(tidyverse)

BirdData_1R <- read_delim("~/R/GitHub Cursos HN/CapacitacionHidrobiologia/data/Replic1_birds.csv", 
     delim = ";", escape_double = FALSE, trim_ws = TRUE)

BirdData_2R <- read_delim("~/R/GitHub Cursos HN/CapacitacionHidrobiologia/data/Replic2_birds.csv", 
     delim = ";", escape_double = FALSE, trim_ws = TRUE)

BirdData_3R <- read_delim("~/R/GitHub Cursos HN/CapacitacionHidrobiologia/data/Replic3_birds.csv", 
     delim = ";", escape_double = FALSE, trim_ws = TRUE)

```


# Limpieza y Unirs tablas

```{r}
BirdData_1R_clean <- BirdData_1R %>% 
  rename("Point" = "Site",
         "PointName" = `Sitio #`,
         "SityName" = `Sitio nombre`,
         "Date" = `Fecha (m/d/a)`,
         "Time"= `Hora(0:00-24:00)`) %>% 
  select(-Nota)

BirdData_2R_clean <- BirdData_2R %>% 
  rename("Point" = `Sitio #...1`,
         "PointName" = `Sitio #...2`,
         "SityName" = `Sitio nombre`,
         "Date" = `Fecha (m/d/a)`,
         "Time"= `Hora(0:00-24:00)`)

BirdData_3R_clean <- BirdData_3R %>% 
  rename("Point" = `Sitio #...1`,
         "PointName" = `Sitio #...2`,
         "SityName" = `Sitio nombre`,
         "Date" = `Fecha (m/d/a)`,
         "Time"= `Hora(0:00-24:00)`)
```

Unir base de datos

```{r}
AllBirdData <- rbind(BirdData_1R_clean, BirdData_2R_clean, 
                     BirdData_3R_clean) %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(Date = yday(Date)) %>% 
  separate(Time, c("Time", "M"), sep =":") %>% 
  mutate(Time = str_c(Time, M)) %>% 
  mutate(Time = as.numeric(Time)) %>% 
  mutate(PointName = str_replace(PointName, "F" , "_F")) %>% 
  mutate(PointName = str_replace(PointName, "C", "_C")) %>% 
  separate(PointName, c("PointName", "SiteType" )) 
  
```

```{r}
head(AllBirdData)
```


# Cambiar formato de tablas

Pasar de un formato largo a un ancho

```{r}
DataBirds_vegan <- AllBirdData %>% 
  mutate(`Num. 0-50` =  as.numeric(`Num. 0-50`)) %>% 
  group_by(PointName, SiteType, Date, Especies) %>% 
  summarise(Abundance = max(`Num. 0-50`)) %>% 
  pivot_wider(names_from = Especies, values_from = Abundance, 
              values_fill = 0)

BirdsData <- DataBirds_vegan %>% 
  rename("Site" = "PointName",
         "Type" = "SiteType") %>% 
  mutate(Site = factor(Site))

```

# Limpiar variables de habitat

```{r}
TreesQ <- read.csv2("~/R/GitHub Cursos HN/CapacitacionHidrobiologia/data/TreesQ.csv")
HistQ <- read.csv2("~/R/GitHub Cursos HN/CapacitacionHidrobiologia/data/HistQ.csv")
VegData <- read.csv2("~/R/GitHub Cursos HN/CapacitacionHidrobiologia/data/VegData.csv")
```

# Crear variables de habitat

Estimacion de area basal

```{r}
Area_basal <- TreesQ %>% 
  mutate(VEGID = factor(VEGID)) %>% 
  mutate(Species = factor(Species)) %>% 
  group_by(VEGID) %>% 
  summarise(Area_Basal = 2*(A* 0.1 + B* 0.3 + C* 0.8 + D*1.8 + E*3.1 + F *4.9 + G*7.1 + H*0.05 )) %>% 
  group_by(VEGID) %>% 
  summarise(Area_Basal = sum(Area_Basal))

head(Area_basal)
```

Crear variable de covertura

```{r}
Group_cober <- HistQ %>% 
  group_by(VEGID) %>% 
  summarise(Group_cover = sum(A, na.rm = TRUE)+sum(B, na.rm = TRUE)+sum(C, na.rm = TRUE),
            Subcanopy = sum(D, na.rm = TRUE) + sum(E, na.rm = TRUE))

head(Group_cober)
```

Unir variables de habitat

```{r}
Veg_data_full_cover <- Area_basal %>% 
  left_join(Group_cober, by= "VEGID")

Habitat <- Veg_data_full_cover %>% 
  left_join(VegData, by = "VEGID") 
```

```{r}
head(Habitat)
```


# Unir datos de habitat con observaciones de aves

```{r}
head(DataBirds_vegan)
```


```{r}
Habitat <- Habitat %>% 
  mutate(Site = factor(Site))

BirdsData <- BirdsData %>% 
  mutate(Site = factor(Site))

FullData <- Habitat %>% 
  full_join(BirdsData, by = "Site")
```

```{r}
head(FullData)
```


# Graficado de datos

```{r, warning=FALSE, message=FALSE}
ggplot(data= FullData, aes(x= Area_Basal, y= CARPUS))+
  geom_point()+
  stat_smooth(method = glm, method.args = list(family = "poisson"),
              fill = "lightblue")+
  labs(title = "Relacionde cardelina pusilla versus Area basal",
       y= "Abundancia CARPUS", x= "Area basal")+
  theme_classic() 

```


:::
