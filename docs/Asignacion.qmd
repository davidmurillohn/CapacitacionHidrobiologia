---
title: "Asignacion"
author: "David Murillo"
format: html
---

# Asiganaciones

::: panel-tabset

## Ejercicio 1

Con la base de datos "penguins_size.csv", sigue las siguientes instrucciones:

- Cargar la base de datos:

Utiliza las funciones necesarias para cargar la base de datos "penguins_size.csv" en tu entorno de trabajo. Asegúrate de tener acceso a la información contenida en el conjunto de datos.

- Filtrar por sexo Hembra:

Aplica las funciones adecuadas para filtrar únicamente las observaciones correspondientes al sexo femenino en el conjunto de datos. De esta manera, obtendrás un subconjunto que incluye solo las hembras.

- Seleccionar una isla en específico:

Selecciona una isla específica del conjunto de datos utilizando las funciones apropiadas. Puedes elegir la isla que prefieras y filtrar las observaciones correspondientes a esa ubicación.

- Presentar el resumen de alguna variable, por sexo y por isla:

Utiliza funciones de resumen estadístico para presentar información relevante sobre alguna variable de interés, considerando la distinción por sexo y por isla. Puede ser útil visualizar esta información de manera clara y comprensible.

## Ejercicio 2

Creación de un R Markdown en Quarto o R Notebook para el Análisis de la Base de Datos "catrate.csv"

El objetivo de este ejercicio es utilizar la base de datos "catrate.csv" para generar un informe interactivo en formato HTML. A través de un R Markdown en Quarto o un R Notebook, presentaremos tanto una tabla como un gráfico relacionados con la información contenida en dicha base de datos.

Base de datos

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)

catrate <- read.csv("data/catrate.csv")
head(catrate)
```

**Resultado 1**

```{r, echo=FALSE, warning=FALSE, message=FALSE}
catrate %>% 
  mutate(years = factor(years)) %>% 
  group_by(years, pond) %>% 
  summarise(success = mean(success))
```

**Resultado 2**

```{r, echo=FALSE, warning=FALSE, message=FALSE}
catrate %>% 
  mutate(years = factor(years)) %>% 
  group_by(years, pond) %>% 
  summarise(success = mean(success)) %>% 
  ggplot(aes(pond, success, fill = years))+
  geom_point()+
  theme_classic()

```


::: 
 